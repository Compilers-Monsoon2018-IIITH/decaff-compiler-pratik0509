Terminals unused in grammar

   T_INTG
   T_FLOT
   T_BOOL
   O_NOT
   O_LEQ
   O_GEQ
   O_LES
   O_GRE
   O_EQL
   O_NEQ


State 5 conflicts: 2 shift/reduce
State 8 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 10 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 15 conflicts: 1 shift/reduce
State 16 conflicts: 2 shift/reduce
State 17 conflicts: 2 shift/reduce
State 21 conflicts: 2 shift/reduce
State 22 conflicts: 2 shift/reduce
State 23 conflicts: 2 shift/reduce
State 29 conflicts: 1 shift/reduce
State 40 conflicts: 2 shift/reduce
State 49 conflicts: 2 shift/reduce
State 50 conflicts: 2 shift/reduce
State 51 conflicts: 2 shift/reduce
State 52 conflicts: 2 shift/reduce
State 59 conflicts: 1 shift/reduce, 3 reduce/reduce
State 60 conflicts: 1 shift/reduce, 3 reduce/reduce
State 94 conflicts: 13 shift/reduce
State 96 conflicts: 13 shift/reduce
State 122 conflicts: 2 shift/reduce
State 125 conflicts: 13 shift/reduce
State 134 conflicts: 2 shift/reduce
State 135 conflicts: 2 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE T_ELINES GLOBAL_DECL RIGHT_CBRACE T_ELINES

    2 GLOBAL_DECL: %empty
    3            | FIELD_DECLS T_ELINES
    4            | METHOD_DECLS T_ELINES
    5            | GLOBAL_DECL FIELD_DECLS T_ELINES
    6            | GLOBAL_DECL METHOD_DECLS T_ELINES

    7 T_NEWLINES: T_NEWLINE
    8           | T_NEWLINES T_NEWLINE

    9 T_ELINES: %empty
   10         | T_NEWLINES
   11         | O_SEMICOLONS
   12         | T_ELINES T_NEWLINES
   13         | T_ELINES O_SEMICOLONS

   14 O_SEMICOLONS: O_SEMICOLON
   15             | O_SEMICOLONS O_SEMICOLON

   16 FIELD_DECLS: KEY_TYPE IDENTIFIER_LIST O_SEMICOLONS

   17 IDENTIFIER_LIST: IDENTIFIER
   18                | IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE
   19                | IDENTIFIER_LIST O_COMMA IDENTIFIER
   20                | IDENTIFIER_LIST O_COMMA IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE

   21 METHOD_DECLS: KEY_TYPE IDENTIFIER O_LEF ARG_LIST O_RIT BLOCK

   22 BLOCK: T_ELINES LEFT_CBRACE EXECUTABLES RIGHT_CBRACE T_ELINES

   23 EXECUTABLES: %empty
   24            | EXECUTABLES T_ELINES VAR_DECL
   25            | EXECUTABLES T_ELINES STATEMENT

   26 VAR_DECL: KEY_TYPE IDENTIFIER_LIST O_SEMICOLON

   27 EXPRESSION: LOCATION
   28           | METHOD_CALL
   29           | LITERAL
   30           | EXPRESSION BINARY_OP EXPRESSION
   31           | BINARY_SUBTRACT EXPRESSION
   32           | UNARY_NOT EXPRESSION
   33           | O_LEF EXPRESSION O_RIT

   34 BINARY_OP: ARITHMETIC_OP
   35          | RELATIONAL_OP
   36          | EQ_OP
   37          | CONDITIONAL_OP

   38 ARITHMETIC_OP: BINARY_ADD
   39              | BINARY_SUBTRACT
   40              | BINARY_MULTIPLY
   41              | BINARY_DIVISION
   42              | BINARY_MOD

   43 RELATIONAL_OP: R_LESS_THAN
   44              | R_GREATER_THAN
   45              | R_LESS_THAN_EQUAL
   46              | R_GREATER_THAN_EQUAL

   47 EQ_OP: R_EQUALS
   48      | R_NOT_EQUALS

   49 CONDITIONAL_OP: R_AND
   50               | R_OR

   51 LITERAL: INT_LITERAL
   52        | BOOL_LITERAL
   53        | CHAR_LITERAL

   54 STATEMENT: LOCATION ASSIGNMENT_OP EXPRESSION O_SEMICOLON
   55          | METHOD_CALL O_SEMICOLON
   56          | KEY_IF O_LEF EXPRESSION O_RIT BLOCK
   57          | KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE BLOCK
   58          | KEY_FOR IDENTIFIER EQUAL_OP EXPRESSION O_COMMA EXPRESSION BLOCK
   59          | BLOCK
   60          | KEY_RETURN EXPRESSION O_SEMICOLON

   61 METHOD_CALL: METHOD_NAME O_LEF PARAM_LIST O_RIT
   62            | KEY_CALLOUT O_LEF STRING O_COMMA PARAM_LIST O_RIT

   63 PARAM_LIST: %empty
   64           | EXPRESSION
   65           | STRING
   66           | PARAM_LIST O_COMMA EXPRESSION
   67           | PARAM_LIST O_COMMA STRING

   68 METHOD_NAME: IDENTIFIER

   69 ASSIGNMENT_OP: EQUAL_OP
   70              | ADD_EQUAL_OP
   71              | SUB_EQUAL_OP

   72 LOCATION: IDENTIFIER
   73         | IDENTIFIER LEFT_SBRACE EXPRESSION RIGHT_SBRACE

   74 ARG_LIST: %empty
   75         | KEY_TYPE IDENTIFIER
   76         | ARG_LIST O_COMMA KEY_TYPE IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INTG (258)
T_FLOT (259)
T_BOOL (260)
T_NEWLINE (261) 7 8
IDENTIFIER (262) 17 18 19 20 21 58 68 72 73 75 76
KEY_CLASS (263) 1
KEY_PROGRAM (264) 1
O_COMMA (265) 19 20 58 62 66 67 76
KEY_TYPE (266) 16 21 26 75 76
KEY_FOR (267) 58
O_SEMICOLON (268) 14 15 26 54 55 60
KEY_IF (269) 56 57
KEY_ELSE (270) 57
KEY_CALLOUT (271) 62
STRING (272) 62 65 67
EQUAL_OP (273) 58 69
ADD_EQUAL_OP (274) 70
SUB_EQUAL_OP (275) 71
LEFT_CBRACE (276) 1 22
RIGHT_CBRACE (277) 1 22
INT_LITERAL (278) 18 20 51
LEFT_SBRACE (279) 18 20 73
RIGHT_SBRACE (280) 18 20 73
BOOL_LITERAL (281) 52
CHAR_LITERAL (282) 53
BINARY_ADD (283) 38
BINARY_SUBTRACT (284) 31 39
BINARY_MULTIPLY (285) 40
BINARY_DIVISION (286) 41
BINARY_MOD (287) 42
O_LEF (288) 21 33 56 57 61 62
O_RIT (289) 21 33 56 57 61 62
O_NOT (290)
O_LEQ (291)
O_GEQ (292)
O_LES (293)
O_GRE (294)
O_EQL (295)
O_NEQ (296)
R_AND (297) 49
R_OR (298) 50
R_EQUALS (299) 47
R_NOT_EQUALS (300) 48
R_GREATER_THAN (301) 44
R_GREATER_THAN_EQUAL (302) 46
R_LESS_THAN (303) 43
R_LESS_THAN_EQUAL (304) 45
UNARY_NOT (305) 32
KEY_RETURN (306) 60


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
PROGRAM (53)
    on left: 1, on right: 0
GLOBAL_DECL (54)
    on left: 2 3 4 5 6, on right: 1 5 6
T_NEWLINES (55)
    on left: 7 8, on right: 8 10 12
T_ELINES (56)
    on left: 9 10 11 12 13, on right: 1 3 4 5 6 12 13 22 24 25
O_SEMICOLONS (57)
    on left: 14 15, on right: 11 13 15 16
FIELD_DECLS (58)
    on left: 16, on right: 3 5
IDENTIFIER_LIST (59)
    on left: 17 18 19 20, on right: 16 19 20 26
METHOD_DECLS (60)
    on left: 21, on right: 4 6
BLOCK (61)
    on left: 22, on right: 21 56 57 58 59
EXECUTABLES (62)
    on left: 23 24 25, on right: 22 24 25
VAR_DECL (63)
    on left: 26, on right: 24
EXPRESSION (64)
    on left: 27 28 29 30 31 32 33, on right: 30 31 32 33 54 56 57 58
    60 64 66 73
BINARY_OP (65)
    on left: 34 35 36 37, on right: 30
ARITHMETIC_OP (66)
    on left: 38 39 40 41 42, on right: 34
RELATIONAL_OP (67)
    on left: 43 44 45 46, on right: 35
EQ_OP (68)
    on left: 47 48, on right: 36
CONDITIONAL_OP (69)
    on left: 49 50, on right: 37
LITERAL (70)
    on left: 51 52 53, on right: 29
STATEMENT (71)
    on left: 54 55 56 57 58 59 60, on right: 25
METHOD_CALL (72)
    on left: 61 62, on right: 28 55
PARAM_LIST (73)
    on left: 63 64 65 66 67, on right: 61 62 66 67
METHOD_NAME (74)
    on left: 68, on right: 61
ASSIGNMENT_OP (75)
    on left: 69 70 71, on right: 54
LOCATION (76)
    on left: 72 73, on right: 27 54
ARG_LIST (77)
    on left: 74 75 76, on right: 21 76


State 0

    0 $accept: . PROGRAM $end

    KEY_CLASS  shift, and go to state 1

    PROGRAM  go to state 2


State 1

    1 PROGRAM: KEY_CLASS . KEY_PROGRAM LEFT_CBRACE T_ELINES GLOBAL_DECL RIGHT_CBRACE T_ELINES

    KEY_PROGRAM  shift, and go to state 3


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 4


State 3

    1 PROGRAM: KEY_CLASS KEY_PROGRAM . LEFT_CBRACE T_ELINES GLOBAL_DECL RIGHT_CBRACE T_ELINES

    LEFT_CBRACE  shift, and go to state 5


State 4

    0 $accept: PROGRAM $end .

    $default  accept


State 5

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE . T_ELINES GLOBAL_DECL RIGHT_CBRACE T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 9
    O_SEMICOLONS  go to state 10


State 6

    7 T_NEWLINES: T_NEWLINE .

    $default  reduce using rule 7 (T_NEWLINES)


State 7

   14 O_SEMICOLONS: O_SEMICOLON .

    $default  reduce using rule 14 (O_SEMICOLONS)


State 8

    8 T_NEWLINES: T_NEWLINES . T_NEWLINE
   10 T_ELINES: T_NEWLINES .

    T_NEWLINE  shift, and go to state 11

    T_NEWLINE  [reduce using rule 10 (T_ELINES)]
    $default   reduce using rule 10 (T_ELINES)


State 9

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE T_ELINES . GLOBAL_DECL RIGHT_CBRACE T_ELINES
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    KEY_TYPE     shift, and go to state 12
    O_SEMICOLON  shift, and go to state 7

    KEY_TYPE  [reduce using rule 2 (GLOBAL_DECL)]
    $default  reduce using rule 2 (GLOBAL_DECL)

    GLOBAL_DECL   go to state 13
    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15
    FIELD_DECLS   go to state 16
    METHOD_DECLS  go to state 17


State 10

   11 T_ELINES: O_SEMICOLONS .
   15 O_SEMICOLONS: O_SEMICOLONS . O_SEMICOLON

    O_SEMICOLON  shift, and go to state 18

    O_SEMICOLON  [reduce using rule 11 (T_ELINES)]
    $default     reduce using rule 11 (T_ELINES)


State 11

    8 T_NEWLINES: T_NEWLINES T_NEWLINE .

    $default  reduce using rule 8 (T_NEWLINES)


State 12

   16 FIELD_DECLS: KEY_TYPE . IDENTIFIER_LIST O_SEMICOLONS
   21 METHOD_DECLS: KEY_TYPE . IDENTIFIER O_LEF ARG_LIST O_RIT BLOCK

    IDENTIFIER  shift, and go to state 19

    IDENTIFIER_LIST  go to state 20


State 13

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE T_ELINES GLOBAL_DECL . RIGHT_CBRACE T_ELINES
    5 GLOBAL_DECL: GLOBAL_DECL . FIELD_DECLS T_ELINES
    6            | GLOBAL_DECL . METHOD_DECLS T_ELINES

    KEY_TYPE      shift, and go to state 12
    RIGHT_CBRACE  shift, and go to state 21

    FIELD_DECLS   go to state 22
    METHOD_DECLS  go to state 23


State 14

    8 T_NEWLINES: T_NEWLINES . T_NEWLINE
   12 T_ELINES: T_ELINES T_NEWLINES .

    T_NEWLINE  shift, and go to state 11

    T_NEWLINE  [reduce using rule 12 (T_ELINES)]
    $default   reduce using rule 12 (T_ELINES)


State 15

   13 T_ELINES: T_ELINES O_SEMICOLONS .
   15 O_SEMICOLONS: O_SEMICOLONS . O_SEMICOLON

    O_SEMICOLON  shift, and go to state 18

    O_SEMICOLON  [reduce using rule 13 (T_ELINES)]
    $default     reduce using rule 13 (T_ELINES)


State 16

    3 GLOBAL_DECL: FIELD_DECLS . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 24
    O_SEMICOLONS  go to state 10


State 17

    4 GLOBAL_DECL: METHOD_DECLS . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 25
    O_SEMICOLONS  go to state 10


State 18

   15 O_SEMICOLONS: O_SEMICOLONS O_SEMICOLON .

    $default  reduce using rule 15 (O_SEMICOLONS)


State 19

   17 IDENTIFIER_LIST: IDENTIFIER .
   18                | IDENTIFIER . LEFT_SBRACE INT_LITERAL RIGHT_SBRACE
   21 METHOD_DECLS: KEY_TYPE IDENTIFIER . O_LEF ARG_LIST O_RIT BLOCK

    LEFT_SBRACE  shift, and go to state 26
    O_LEF        shift, and go to state 27

    $default  reduce using rule 17 (IDENTIFIER_LIST)


State 20

   16 FIELD_DECLS: KEY_TYPE IDENTIFIER_LIST . O_SEMICOLONS
   19 IDENTIFIER_LIST: IDENTIFIER_LIST . O_COMMA IDENTIFIER
   20                | IDENTIFIER_LIST . O_COMMA IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE

    O_COMMA      shift, and go to state 28
    O_SEMICOLON  shift, and go to state 7

    O_SEMICOLONS  go to state 29


State 21

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE T_ELINES GLOBAL_DECL RIGHT_CBRACE . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 30
    O_SEMICOLONS  go to state 10


State 22

    5 GLOBAL_DECL: GLOBAL_DECL FIELD_DECLS . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 31
    O_SEMICOLONS  go to state 10


State 23

    6 GLOBAL_DECL: GLOBAL_DECL METHOD_DECLS . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 32
    O_SEMICOLONS  go to state 10


State 24

    3 GLOBAL_DECL: FIELD_DECLS T_ELINES .
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    $default  reduce using rule 3 (GLOBAL_DECL)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 25

    4 GLOBAL_DECL: METHOD_DECLS T_ELINES .
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    $default  reduce using rule 4 (GLOBAL_DECL)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 26

   18 IDENTIFIER_LIST: IDENTIFIER LEFT_SBRACE . INT_LITERAL RIGHT_SBRACE

    INT_LITERAL  shift, and go to state 33


State 27

   21 METHOD_DECLS: KEY_TYPE IDENTIFIER O_LEF . ARG_LIST O_RIT BLOCK

    KEY_TYPE  shift, and go to state 34

    $default  reduce using rule 74 (ARG_LIST)

    ARG_LIST  go to state 35


State 28

   19 IDENTIFIER_LIST: IDENTIFIER_LIST O_COMMA . IDENTIFIER
   20                | IDENTIFIER_LIST O_COMMA . IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE

    IDENTIFIER  shift, and go to state 36


State 29

   15 O_SEMICOLONS: O_SEMICOLONS . O_SEMICOLON
   16 FIELD_DECLS: KEY_TYPE IDENTIFIER_LIST O_SEMICOLONS .

    O_SEMICOLON  shift, and go to state 18

    O_SEMICOLON  [reduce using rule 16 (FIELD_DECLS)]
    $default     reduce using rule 16 (FIELD_DECLS)


State 30

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE T_ELINES GLOBAL_DECL RIGHT_CBRACE T_ELINES .
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    $default  reduce using rule 1 (PROGRAM)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 31

    5 GLOBAL_DECL: GLOBAL_DECL FIELD_DECLS T_ELINES .
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    $default  reduce using rule 5 (GLOBAL_DECL)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 32

    6 GLOBAL_DECL: GLOBAL_DECL METHOD_DECLS T_ELINES .
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    $default  reduce using rule 6 (GLOBAL_DECL)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 33

   18 IDENTIFIER_LIST: IDENTIFIER LEFT_SBRACE INT_LITERAL . RIGHT_SBRACE

    RIGHT_SBRACE  shift, and go to state 37


State 34

   75 ARG_LIST: KEY_TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 38


State 35

   21 METHOD_DECLS: KEY_TYPE IDENTIFIER O_LEF ARG_LIST . O_RIT BLOCK
   76 ARG_LIST: ARG_LIST . O_COMMA KEY_TYPE IDENTIFIER

    O_COMMA  shift, and go to state 39
    O_RIT    shift, and go to state 40


State 36

   19 IDENTIFIER_LIST: IDENTIFIER_LIST O_COMMA IDENTIFIER .
   20                | IDENTIFIER_LIST O_COMMA IDENTIFIER . LEFT_SBRACE INT_LITERAL RIGHT_SBRACE

    LEFT_SBRACE  shift, and go to state 41

    $default  reduce using rule 19 (IDENTIFIER_LIST)


State 37

   18 IDENTIFIER_LIST: IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE .

    $default  reduce using rule 18 (IDENTIFIER_LIST)


State 38

   75 ARG_LIST: KEY_TYPE IDENTIFIER .

    $default  reduce using rule 75 (ARG_LIST)


State 39

   76 ARG_LIST: ARG_LIST O_COMMA . KEY_TYPE IDENTIFIER

    KEY_TYPE  shift, and go to state 42


State 40

   21 METHOD_DECLS: KEY_TYPE IDENTIFIER O_LEF ARG_LIST O_RIT . BLOCK

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 43
    O_SEMICOLONS  go to state 10
    BLOCK         go to state 44


State 41

   20 IDENTIFIER_LIST: IDENTIFIER_LIST O_COMMA IDENTIFIER LEFT_SBRACE . INT_LITERAL RIGHT_SBRACE

    INT_LITERAL  shift, and go to state 45


State 42

   76 ARG_LIST: ARG_LIST O_COMMA KEY_TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 46


State 43

   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS
   22 BLOCK: T_ELINES . LEFT_CBRACE EXECUTABLES RIGHT_CBRACE T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7
    LEFT_CBRACE  shift, and go to state 47

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 44

   21 METHOD_DECLS: KEY_TYPE IDENTIFIER O_LEF ARG_LIST O_RIT BLOCK .

    $default  reduce using rule 21 (METHOD_DECLS)


State 45

   20 IDENTIFIER_LIST: IDENTIFIER_LIST O_COMMA IDENTIFIER LEFT_SBRACE INT_LITERAL . RIGHT_SBRACE

    RIGHT_SBRACE  shift, and go to state 48


State 46

   76 ARG_LIST: ARG_LIST O_COMMA KEY_TYPE IDENTIFIER .

    $default  reduce using rule 76 (ARG_LIST)


State 47

   22 BLOCK: T_ELINES LEFT_CBRACE . EXECUTABLES RIGHT_CBRACE T_ELINES

    $default  reduce using rule 23 (EXECUTABLES)

    EXECUTABLES  go to state 49


State 48

   20 IDENTIFIER_LIST: IDENTIFIER_LIST O_COMMA IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE .

    $default  reduce using rule 20 (IDENTIFIER_LIST)


State 49

   22 BLOCK: T_ELINES LEFT_CBRACE EXECUTABLES . RIGHT_CBRACE T_ELINES
   24 EXECUTABLES: EXECUTABLES . T_ELINES VAR_DECL
   25            | EXECUTABLES . T_ELINES STATEMENT

    T_NEWLINE     shift, and go to state 6
    O_SEMICOLON   shift, and go to state 7
    RIGHT_CBRACE  shift, and go to state 50

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 51
    O_SEMICOLONS  go to state 10


State 50

   22 BLOCK: T_ELINES LEFT_CBRACE EXECUTABLES RIGHT_CBRACE . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 52
    O_SEMICOLONS  go to state 10


State 51

   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS
   24 EXECUTABLES: EXECUTABLES T_ELINES . VAR_DECL
   25            | EXECUTABLES T_ELINES . STATEMENT

    T_NEWLINE    shift, and go to state 6
    IDENTIFIER   shift, and go to state 53
    KEY_TYPE     shift, and go to state 54
    KEY_FOR      shift, and go to state 55
    O_SEMICOLON  shift, and go to state 7
    KEY_IF       shift, and go to state 56
    KEY_CALLOUT  shift, and go to state 57
    KEY_RETURN   shift, and go to state 58

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 59
    T_ELINES      go to state 43
    O_SEMICOLONS  go to state 60
    BLOCK         go to state 61
    VAR_DECL      go to state 62
    STATEMENT     go to state 63
    METHOD_CALL   go to state 64
    METHOD_NAME   go to state 65
    LOCATION      go to state 66


State 52

   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS
   22 BLOCK: T_ELINES LEFT_CBRACE EXECUTABLES RIGHT_CBRACE T_ELINES .

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 22 (BLOCK)]
    O_SEMICOLON  [reduce using rule 22 (BLOCK)]
    $default     reduce using rule 22 (BLOCK)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 53

   68 METHOD_NAME: IDENTIFIER .
   72 LOCATION: IDENTIFIER .
   73         | IDENTIFIER . LEFT_SBRACE EXPRESSION RIGHT_SBRACE

    LEFT_SBRACE  shift, and go to state 67

    O_LEF     reduce using rule 68 (METHOD_NAME)
    $default  reduce using rule 72 (LOCATION)


State 54

   26 VAR_DECL: KEY_TYPE . IDENTIFIER_LIST O_SEMICOLON

    IDENTIFIER  shift, and go to state 68

    IDENTIFIER_LIST  go to state 69


State 55

   58 STATEMENT: KEY_FOR . IDENTIFIER EQUAL_OP EXPRESSION O_COMMA EXPRESSION BLOCK

    IDENTIFIER  shift, and go to state 70


State 56

   56 STATEMENT: KEY_IF . O_LEF EXPRESSION O_RIT BLOCK
   57          | KEY_IF . O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE BLOCK

    O_LEF  shift, and go to state 71


State 57

   62 METHOD_CALL: KEY_CALLOUT . O_LEF STRING O_COMMA PARAM_LIST O_RIT

    O_LEF  shift, and go to state 72


State 58

   60 STATEMENT: KEY_RETURN . EXPRESSION O_SEMICOLON

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 79
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 59

    8 T_NEWLINES: T_NEWLINES . T_NEWLINE
   10 T_ELINES: T_NEWLINES .
   12         | T_ELINES T_NEWLINES .

    T_NEWLINE  shift, and go to state 11

    T_NEWLINE    [reduce using rule 10 (T_ELINES)]
    T_NEWLINE    [reduce using rule 12 (T_ELINES)]
    O_SEMICOLON  reduce using rule 10 (T_ELINES)
    O_SEMICOLON  [reduce using rule 12 (T_ELINES)]
    LEFT_CBRACE  reduce using rule 10 (T_ELINES)
    LEFT_CBRACE  [reduce using rule 12 (T_ELINES)]
    $default     reduce using rule 12 (T_ELINES)


State 60

   11 T_ELINES: O_SEMICOLONS .
   13         | T_ELINES O_SEMICOLONS .
   15 O_SEMICOLONS: O_SEMICOLONS . O_SEMICOLON

    O_SEMICOLON  shift, and go to state 18

    T_NEWLINE    reduce using rule 11 (T_ELINES)
    T_NEWLINE    [reduce using rule 13 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 11 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 13 (T_ELINES)]
    LEFT_CBRACE  reduce using rule 11 (T_ELINES)
    LEFT_CBRACE  [reduce using rule 13 (T_ELINES)]
    $default     reduce using rule 13 (T_ELINES)


State 61

   59 STATEMENT: BLOCK .

    $default  reduce using rule 59 (STATEMENT)


State 62

   24 EXECUTABLES: EXECUTABLES T_ELINES VAR_DECL .

    $default  reduce using rule 24 (EXECUTABLES)


State 63

   25 EXECUTABLES: EXECUTABLES T_ELINES STATEMENT .

    $default  reduce using rule 25 (EXECUTABLES)


State 64

   55 STATEMENT: METHOD_CALL . O_SEMICOLON

    O_SEMICOLON  shift, and go to state 83


State 65

   61 METHOD_CALL: METHOD_NAME . O_LEF PARAM_LIST O_RIT

    O_LEF  shift, and go to state 84


State 66

   54 STATEMENT: LOCATION . ASSIGNMENT_OP EXPRESSION O_SEMICOLON

    EQUAL_OP      shift, and go to state 85
    ADD_EQUAL_OP  shift, and go to state 86
    SUB_EQUAL_OP  shift, and go to state 87

    ASSIGNMENT_OP  go to state 88


State 67

   73 LOCATION: IDENTIFIER LEFT_SBRACE . EXPRESSION RIGHT_SBRACE

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 89
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 68

   17 IDENTIFIER_LIST: IDENTIFIER .
   18                | IDENTIFIER . LEFT_SBRACE INT_LITERAL RIGHT_SBRACE

    LEFT_SBRACE  shift, and go to state 26

    $default  reduce using rule 17 (IDENTIFIER_LIST)


State 69

   19 IDENTIFIER_LIST: IDENTIFIER_LIST . O_COMMA IDENTIFIER
   20                | IDENTIFIER_LIST . O_COMMA IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE
   26 VAR_DECL: KEY_TYPE IDENTIFIER_LIST . O_SEMICOLON

    O_COMMA      shift, and go to state 28
    O_SEMICOLON  shift, and go to state 90


State 70

   58 STATEMENT: KEY_FOR IDENTIFIER . EQUAL_OP EXPRESSION O_COMMA EXPRESSION BLOCK

    EQUAL_OP  shift, and go to state 91


State 71

   56 STATEMENT: KEY_IF O_LEF . EXPRESSION O_RIT BLOCK
   57          | KEY_IF O_LEF . EXPRESSION O_RIT BLOCK KEY_ELSE BLOCK

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 92
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 72

   62 METHOD_CALL: KEY_CALLOUT O_LEF . STRING O_COMMA PARAM_LIST O_RIT

    STRING  shift, and go to state 93


State 73

   51 LITERAL: INT_LITERAL .

    $default  reduce using rule 51 (LITERAL)


State 74

   52 LITERAL: BOOL_LITERAL .

    $default  reduce using rule 52 (LITERAL)


State 75

   53 LITERAL: CHAR_LITERAL .

    $default  reduce using rule 53 (LITERAL)


State 76

   31 EXPRESSION: BINARY_SUBTRACT . EXPRESSION

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 94
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 77

   33 EXPRESSION: O_LEF . EXPRESSION O_RIT

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 95
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 78

   32 EXPRESSION: UNARY_NOT . EXPRESSION

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 96
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 79

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   60 STATEMENT: KEY_RETURN EXPRESSION . O_SEMICOLON

    O_SEMICOLON           shift, and go to state 97
    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 80

   29 EXPRESSION: LITERAL .

    $default  reduce using rule 29 (EXPRESSION)


State 81

   28 EXPRESSION: METHOD_CALL .

    $default  reduce using rule 28 (EXPRESSION)


State 82

   27 EXPRESSION: LOCATION .

    $default  reduce using rule 27 (EXPRESSION)


State 83

   55 STATEMENT: METHOD_CALL O_SEMICOLON .

    $default  reduce using rule 55 (STATEMENT)


State 84

   61 METHOD_CALL: METHOD_NAME O_LEF . PARAM_LIST O_RIT

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    STRING           shift, and go to state 116
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    $default  reduce using rule 63 (PARAM_LIST)

    EXPRESSION   go to state 117
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    PARAM_LIST   go to state 118
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 85

   69 ASSIGNMENT_OP: EQUAL_OP .

    $default  reduce using rule 69 (ASSIGNMENT_OP)


State 86

   70 ASSIGNMENT_OP: ADD_EQUAL_OP .

    $default  reduce using rule 70 (ASSIGNMENT_OP)


State 87

   71 ASSIGNMENT_OP: SUB_EQUAL_OP .

    $default  reduce using rule 71 (ASSIGNMENT_OP)


State 88

   54 STATEMENT: LOCATION ASSIGNMENT_OP . EXPRESSION O_SEMICOLON

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 119
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 89

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   73 LOCATION: IDENTIFIER LEFT_SBRACE EXPRESSION . RIGHT_SBRACE

    RIGHT_SBRACE          shift, and go to state 120
    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 90

   26 VAR_DECL: KEY_TYPE IDENTIFIER_LIST O_SEMICOLON .

    $default  reduce using rule 26 (VAR_DECL)


State 91

   58 STATEMENT: KEY_FOR IDENTIFIER EQUAL_OP . EXPRESSION O_COMMA EXPRESSION BLOCK

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 121
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 92

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   56 STATEMENT: KEY_IF O_LEF EXPRESSION . O_RIT BLOCK
   57          | KEY_IF O_LEF EXPRESSION . O_RIT BLOCK KEY_ELSE BLOCK

    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    O_RIT                 shift, and go to state 122
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 93

   62 METHOD_CALL: KEY_CALLOUT O_LEF STRING . O_COMMA PARAM_LIST O_RIT

    O_COMMA  shift, and go to state 123


State 94

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   31           | BINARY_SUBTRACT EXPRESSION .

    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    BINARY_ADD            [reduce using rule 31 (EXPRESSION)]
    BINARY_SUBTRACT       [reduce using rule 31 (EXPRESSION)]
    BINARY_MULTIPLY       [reduce using rule 31 (EXPRESSION)]
    BINARY_DIVISION       [reduce using rule 31 (EXPRESSION)]
    BINARY_MOD            [reduce using rule 31 (EXPRESSION)]
    R_AND                 [reduce using rule 31 (EXPRESSION)]
    R_OR                  [reduce using rule 31 (EXPRESSION)]
    R_EQUALS              [reduce using rule 31 (EXPRESSION)]
    R_NOT_EQUALS          [reduce using rule 31 (EXPRESSION)]
    R_GREATER_THAN        [reduce using rule 31 (EXPRESSION)]
    R_GREATER_THAN_EQUAL  [reduce using rule 31 (EXPRESSION)]
    R_LESS_THAN           [reduce using rule 31 (EXPRESSION)]
    R_LESS_THAN_EQUAL     [reduce using rule 31 (EXPRESSION)]
    $default              reduce using rule 31 (EXPRESSION)

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 95

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   33           | O_LEF EXPRESSION . O_RIT

    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    O_RIT                 shift, and go to state 124
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 96

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   32           | UNARY_NOT EXPRESSION .

    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    BINARY_ADD            [reduce using rule 32 (EXPRESSION)]
    BINARY_SUBTRACT       [reduce using rule 32 (EXPRESSION)]
    BINARY_MULTIPLY       [reduce using rule 32 (EXPRESSION)]
    BINARY_DIVISION       [reduce using rule 32 (EXPRESSION)]
    BINARY_MOD            [reduce using rule 32 (EXPRESSION)]
    R_AND                 [reduce using rule 32 (EXPRESSION)]
    R_OR                  [reduce using rule 32 (EXPRESSION)]
    R_EQUALS              [reduce using rule 32 (EXPRESSION)]
    R_NOT_EQUALS          [reduce using rule 32 (EXPRESSION)]
    R_GREATER_THAN        [reduce using rule 32 (EXPRESSION)]
    R_GREATER_THAN_EQUAL  [reduce using rule 32 (EXPRESSION)]
    R_LESS_THAN           [reduce using rule 32 (EXPRESSION)]
    R_LESS_THAN_EQUAL     [reduce using rule 32 (EXPRESSION)]
    $default              reduce using rule 32 (EXPRESSION)

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 97

   60 STATEMENT: KEY_RETURN EXPRESSION O_SEMICOLON .

    $default  reduce using rule 60 (STATEMENT)


State 98

   38 ARITHMETIC_OP: BINARY_ADD .

    $default  reduce using rule 38 (ARITHMETIC_OP)


State 99

   39 ARITHMETIC_OP: BINARY_SUBTRACT .

    $default  reduce using rule 39 (ARITHMETIC_OP)


State 100

   40 ARITHMETIC_OP: BINARY_MULTIPLY .

    $default  reduce using rule 40 (ARITHMETIC_OP)


State 101

   41 ARITHMETIC_OP: BINARY_DIVISION .

    $default  reduce using rule 41 (ARITHMETIC_OP)


State 102

   42 ARITHMETIC_OP: BINARY_MOD .

    $default  reduce using rule 42 (ARITHMETIC_OP)


State 103

   49 CONDITIONAL_OP: R_AND .

    $default  reduce using rule 49 (CONDITIONAL_OP)


State 104

   50 CONDITIONAL_OP: R_OR .

    $default  reduce using rule 50 (CONDITIONAL_OP)


State 105

   47 EQ_OP: R_EQUALS .

    $default  reduce using rule 47 (EQ_OP)


State 106

   48 EQ_OP: R_NOT_EQUALS .

    $default  reduce using rule 48 (EQ_OP)


State 107

   44 RELATIONAL_OP: R_GREATER_THAN .

    $default  reduce using rule 44 (RELATIONAL_OP)


State 108

   46 RELATIONAL_OP: R_GREATER_THAN_EQUAL .

    $default  reduce using rule 46 (RELATIONAL_OP)


State 109

   43 RELATIONAL_OP: R_LESS_THAN .

    $default  reduce using rule 43 (RELATIONAL_OP)


State 110

   45 RELATIONAL_OP: R_LESS_THAN_EQUAL .

    $default  reduce using rule 45 (RELATIONAL_OP)


State 111

   30 EXPRESSION: EXPRESSION BINARY_OP . EXPRESSION

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 125
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 112

   34 BINARY_OP: ARITHMETIC_OP .

    $default  reduce using rule 34 (BINARY_OP)


State 113

   35 BINARY_OP: RELATIONAL_OP .

    $default  reduce using rule 35 (BINARY_OP)


State 114

   36 BINARY_OP: EQ_OP .

    $default  reduce using rule 36 (BINARY_OP)


State 115

   37 BINARY_OP: CONDITIONAL_OP .

    $default  reduce using rule 37 (BINARY_OP)


State 116

   65 PARAM_LIST: STRING .

    $default  reduce using rule 65 (PARAM_LIST)


State 117

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   64 PARAM_LIST: EXPRESSION .

    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    $default  reduce using rule 64 (PARAM_LIST)

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 118

   61 METHOD_CALL: METHOD_NAME O_LEF PARAM_LIST . O_RIT
   66 PARAM_LIST: PARAM_LIST . O_COMMA EXPRESSION
   67           | PARAM_LIST . O_COMMA STRING

    O_COMMA  shift, and go to state 126
    O_RIT    shift, and go to state 127


State 119

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   54 STATEMENT: LOCATION ASSIGNMENT_OP EXPRESSION . O_SEMICOLON

    O_SEMICOLON           shift, and go to state 128
    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 120

   73 LOCATION: IDENTIFIER LEFT_SBRACE EXPRESSION RIGHT_SBRACE .

    $default  reduce using rule 73 (LOCATION)


State 121

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   58 STATEMENT: KEY_FOR IDENTIFIER EQUAL_OP EXPRESSION . O_COMMA EXPRESSION BLOCK

    O_COMMA               shift, and go to state 129
    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 122

   56 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT . BLOCK
   57          | KEY_IF O_LEF EXPRESSION O_RIT . BLOCK KEY_ELSE BLOCK

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 43
    O_SEMICOLONS  go to state 10
    BLOCK         go to state 130


State 123

   62 METHOD_CALL: KEY_CALLOUT O_LEF STRING O_COMMA . PARAM_LIST O_RIT

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    STRING           shift, and go to state 116
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    $default  reduce using rule 63 (PARAM_LIST)

    EXPRESSION   go to state 117
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    PARAM_LIST   go to state 131
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 124

   33 EXPRESSION: O_LEF EXPRESSION O_RIT .

    $default  reduce using rule 33 (EXPRESSION)


State 125

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   30           | EXPRESSION BINARY_OP EXPRESSION .

    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    BINARY_ADD            [reduce using rule 30 (EXPRESSION)]
    BINARY_SUBTRACT       [reduce using rule 30 (EXPRESSION)]
    BINARY_MULTIPLY       [reduce using rule 30 (EXPRESSION)]
    BINARY_DIVISION       [reduce using rule 30 (EXPRESSION)]
    BINARY_MOD            [reduce using rule 30 (EXPRESSION)]
    R_AND                 [reduce using rule 30 (EXPRESSION)]
    R_OR                  [reduce using rule 30 (EXPRESSION)]
    R_EQUALS              [reduce using rule 30 (EXPRESSION)]
    R_NOT_EQUALS          [reduce using rule 30 (EXPRESSION)]
    R_GREATER_THAN        [reduce using rule 30 (EXPRESSION)]
    R_GREATER_THAN_EQUAL  [reduce using rule 30 (EXPRESSION)]
    R_LESS_THAN           [reduce using rule 30 (EXPRESSION)]
    R_LESS_THAN_EQUAL     [reduce using rule 30 (EXPRESSION)]
    $default              reduce using rule 30 (EXPRESSION)

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 126

   66 PARAM_LIST: PARAM_LIST O_COMMA . EXPRESSION
   67           | PARAM_LIST O_COMMA . STRING

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    STRING           shift, and go to state 132
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 133
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 127

   61 METHOD_CALL: METHOD_NAME O_LEF PARAM_LIST O_RIT .

    $default  reduce using rule 61 (METHOD_CALL)


State 128

   54 STATEMENT: LOCATION ASSIGNMENT_OP EXPRESSION O_SEMICOLON .

    $default  reduce using rule 54 (STATEMENT)


State 129

   58 STATEMENT: KEY_FOR IDENTIFIER EQUAL_OP EXPRESSION O_COMMA . EXPRESSION BLOCK

    IDENTIFIER       shift, and go to state 53
    KEY_CALLOUT      shift, and go to state 57
    INT_LITERAL      shift, and go to state 73
    BOOL_LITERAL     shift, and go to state 74
    CHAR_LITERAL     shift, and go to state 75
    BINARY_SUBTRACT  shift, and go to state 76
    O_LEF            shift, and go to state 77
    UNARY_NOT        shift, and go to state 78

    EXPRESSION   go to state 134
    LITERAL      go to state 80
    METHOD_CALL  go to state 81
    METHOD_NAME  go to state 65
    LOCATION     go to state 82


State 130

   56 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK .
   57          | KEY_IF O_LEF EXPRESSION O_RIT BLOCK . KEY_ELSE BLOCK

    KEY_ELSE  shift, and go to state 135

    $default  reduce using rule 56 (STATEMENT)


State 131

   62 METHOD_CALL: KEY_CALLOUT O_LEF STRING O_COMMA PARAM_LIST . O_RIT
   66 PARAM_LIST: PARAM_LIST . O_COMMA EXPRESSION
   67           | PARAM_LIST . O_COMMA STRING

    O_COMMA  shift, and go to state 126
    O_RIT    shift, and go to state 136


State 132

   67 PARAM_LIST: PARAM_LIST O_COMMA STRING .

    $default  reduce using rule 67 (PARAM_LIST)


State 133

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   66 PARAM_LIST: PARAM_LIST O_COMMA EXPRESSION .

    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    $default  reduce using rule 66 (PARAM_LIST)

    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 134

   30 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   58 STATEMENT: KEY_FOR IDENTIFIER EQUAL_OP EXPRESSION O_COMMA EXPRESSION . BLOCK

    T_NEWLINE             shift, and go to state 6
    O_SEMICOLON           shift, and go to state 7
    BINARY_ADD            shift, and go to state 98
    BINARY_SUBTRACT       shift, and go to state 99
    BINARY_MULTIPLY       shift, and go to state 100
    BINARY_DIVISION       shift, and go to state 101
    BINARY_MOD            shift, and go to state 102
    R_AND                 shift, and go to state 103
    R_OR                  shift, and go to state 104
    R_EQUALS              shift, and go to state 105
    R_NOT_EQUALS          shift, and go to state 106
    R_GREATER_THAN        shift, and go to state 107
    R_GREATER_THAN_EQUAL  shift, and go to state 108
    R_LESS_THAN           shift, and go to state 109
    R_LESS_THAN_EQUAL     shift, and go to state 110

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES      go to state 8
    T_ELINES        go to state 43
    O_SEMICOLONS    go to state 10
    BLOCK           go to state 137
    BINARY_OP       go to state 111
    ARITHMETIC_OP   go to state 112
    RELATIONAL_OP   go to state 113
    EQ_OP           go to state 114
    CONDITIONAL_OP  go to state 115


State 135

   57 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE . BLOCK

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 43
    O_SEMICOLONS  go to state 10
    BLOCK         go to state 138


State 136

   62 METHOD_CALL: KEY_CALLOUT O_LEF STRING O_COMMA PARAM_LIST O_RIT .

    $default  reduce using rule 62 (METHOD_CALL)


State 137

   58 STATEMENT: KEY_FOR IDENTIFIER EQUAL_OP EXPRESSION O_COMMA EXPRESSION BLOCK .

    $default  reduce using rule 58 (STATEMENT)


State 138

   57 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE BLOCK .

    $default  reduce using rule 57 (STATEMENT)

Terminals unused in grammar

   T_INTG
   T_FLOT
   T_BOOL
   O_NOT
   O_LEQ
   O_GEQ
   O_LES
   O_GRE
   O_EQL
   O_NEQ


State 5 conflicts: 2 shift/reduce
State 8 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 10 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 15 conflicts: 1 shift/reduce
State 16 conflicts: 2 shift/reduce
State 17 conflicts: 2 shift/reduce
State 21 conflicts: 2 shift/reduce
State 22 conflicts: 2 shift/reduce
State 23 conflicts: 2 shift/reduce
State 33 conflicts: 1 shift/reduce
State 57 conflicts: 2 shift/reduce
State 60 conflicts: 13 shift/reduce
State 62 conflicts: 13 shift/reduce
State 90 conflicts: 13 shift/reduce
State 103 conflicts: 2 shift/reduce
State 107 conflicts: 2 shift/reduce
State 108 conflicts: 2 shift/reduce
State 110 conflicts: 2 shift/reduce
State 115 conflicts: 1 shift/reduce, 3 reduce/reduce
State 116 conflicts: 1 shift/reduce, 3 reduce/reduce
State 129 conflicts: 1 shift/reduce
State 135 conflicts: 2 shift/reduce
State 139 conflicts: 2 shift/reduce
State 140 conflicts: 2 shift/reduce
State 146 conflicts: 2 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE T_ELINES GLOBAL_DECL RIGHT_CBRACE T_ELINES

    2 GLOBAL_DECL: %empty
    3            | FIELD_DECLS T_ELINES
    4            | METHOD_DECLS T_ELINES
    5            | GLOBAL_DECL FIELD_DECLS T_ELINES
    6            | GLOBAL_DECL METHOD_DECLS T_ELINES

    7 T_NEWLINES: T_NEWLINE
    8           | T_NEWLINES T_NEWLINE

    9 T_ELINES: %empty
   10         | T_NEWLINES
   11         | O_SEMICOLONS
   12         | T_ELINES T_NEWLINES
   13         | T_ELINES O_SEMICOLONS

   14 O_SEMICOLONS: O_SEMICOLON
   15             | O_SEMICOLONS O_SEMICOLON

   16 FIELD_DECLS: KEY_TYPE IDENTIFIER_LIST O_SEMICOLONS

   17 IDENTIFIER_LIST: IDENTIFIER
   18                | IDENTIFIER ASSIGNMENT_OP EXPRESSION
   19                | IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE ASSIGNMENT_OP EXPRESSION
   20                | IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE
   21                | IDENTIFIER_LIST O_COMMA IDENTIFIER
   22                | IDENTIFIER_LIST O_COMMA IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE

   23 METHOD_DECLS: KEY_TYPE IDENTIFIER O_LEF ARG_LIST O_RIT BLOCK

   24 BLOCK: T_ELINES LEFT_CBRACE EXECUTABLES RIGHT_CBRACE T_ELINES

   25 EXECUTABLES: %empty
   26            | EXECUTABLES T_ELINES VAR_DECL
   27            | EXECUTABLES T_ELINES STATEMENT

   28 VAR_DECL: KEY_TYPE IDENTIFIER_LIST O_SEMICOLONS

   29 EXPRESSION: LOCATION
   30           | METHOD_CALL
   31           | LITERAL
   32           | EXPRESSION BINARY_OP EXPRESSION
   33           | BINARY_SUBTRACT EXPRESSION
   34           | UNARY_NOT EXPRESSION
   35           | O_LEF EXPRESSION O_RIT

   36 BINARY_OP: ARITHMETIC_OP
   37          | RELATIONAL_OP
   38          | EQ_OP
   39          | CONDITIONAL_OP

   40 ARITHMETIC_OP: BINARY_ADD
   41              | BINARY_SUBTRACT
   42              | BINARY_MULTIPLY
   43              | BINARY_DIVISION
   44              | BINARY_MOD

   45 RELATIONAL_OP: R_LESS_THAN
   46              | R_GREATER_THAN
   47              | R_LESS_THAN_EQUAL
   48              | R_GREATER_THAN_EQUAL

   49 EQ_OP: R_EQUALS
   50      | R_NOT_EQUALS

   51 CONDITIONAL_OP: R_AND
   52               | R_OR

   53 LITERAL: INT_LITERAL
   54        | BOOL_LITERAL
   55        | CHAR_LITERAL

   56 STATEMENT: LOCATION ASSIGNMENT_OP EXPRESSION O_SEMICOLON
   57          | METHOD_CALL O_SEMICOLON
   58          | KEY_IF O_LEF EXPRESSION O_RIT BLOCK
   59          | KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE BLOCK
   60          | KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE KEY_IF O_LEF EXPRESSION O_RIT BLOCK
   61          | KEY_FOR IDENTIFIER EQUAL_OP EXPRESSION O_COMMA EXPRESSION BLOCK
   62          | BLOCK
   63          | KEY_RETURN EXPRESSION O_SEMICOLON

   64 METHOD_CALL: METHOD_NAME O_LEF PARAM_LIST O_RIT
   65            | KEY_CALLOUT O_LEF STRING O_COMMA PARAM_LIST O_RIT

   66 PARAM_LIST: %empty
   67           | EXPRESSION
   68           | STRING
   69           | PARAM_LIST O_COMMA EXPRESSION
   70           | PARAM_LIST O_COMMA STRING

   71 METHOD_NAME: IDENTIFIER

   72 ASSIGNMENT_OP: EQUAL_OP
   73              | ADD_EQUAL_OP
   74              | SUB_EQUAL_OP

   75 LOCATION: IDENTIFIER
   76         | IDENTIFIER LEFT_SBRACE EXPRESSION RIGHT_SBRACE

   77 ARG_LIST: %empty
   78         | KEY_TYPE IDENTIFIER
   79         | ARG_LIST O_COMMA KEY_TYPE IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INTG (258)
T_FLOT (259)
T_BOOL (260)
T_NEWLINE (261) 7 8
IDENTIFIER (262) 17 18 19 20 21 22 23 61 71 75 76 78 79
KEY_CLASS (263) 1
KEY_PROGRAM (264) 1
O_COMMA (265) 21 22 61 65 69 70 79
KEY_TYPE (266) 16 23 28 78 79
KEY_FOR (267) 61
O_SEMICOLON (268) 14 15 56 57 63
KEY_IF (269) 58 59 60
KEY_ELSE (270) 59 60
KEY_CALLOUT (271) 65
STRING (272) 65 68 70
EQUAL_OP (273) 61 72
ADD_EQUAL_OP (274) 73
SUB_EQUAL_OP (275) 74
LEFT_CBRACE (276) 1 24
RIGHT_CBRACE (277) 1 24
INT_LITERAL (278) 19 20 22 53
LEFT_SBRACE (279) 19 20 22 76
RIGHT_SBRACE (280) 19 20 22 76
BOOL_LITERAL (281) 54
CHAR_LITERAL (282) 55
BINARY_ADD (283) 40
BINARY_SUBTRACT (284) 33 41
BINARY_MULTIPLY (285) 42
BINARY_DIVISION (286) 43
BINARY_MOD (287) 44
O_LEF (288) 23 35 58 59 60 64 65
O_RIT (289) 23 35 58 59 60 64 65
O_NOT (290)
O_LEQ (291)
O_GEQ (292)
O_LES (293)
O_GRE (294)
O_EQL (295)
O_NEQ (296)
R_AND (297) 51
R_OR (298) 52
R_EQUALS (299) 49
R_NOT_EQUALS (300) 50
R_GREATER_THAN (301) 46
R_GREATER_THAN_EQUAL (302) 48
R_LESS_THAN (303) 45
R_LESS_THAN_EQUAL (304) 47
UNARY_NOT (305) 34
KEY_RETURN (306) 63


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
PROGRAM (53)
    on left: 1, on right: 0
GLOBAL_DECL (54)
    on left: 2 3 4 5 6, on right: 1 5 6
T_NEWLINES (55)
    on left: 7 8, on right: 8 10 12
T_ELINES (56)
    on left: 9 10 11 12 13, on right: 1 3 4 5 6 12 13 24 26 27
O_SEMICOLONS (57)
    on left: 14 15, on right: 11 13 15 16 28
FIELD_DECLS (58)
    on left: 16, on right: 3 5
IDENTIFIER_LIST (59)
    on left: 17 18 19 20 21 22, on right: 16 21 22 28
METHOD_DECLS (60)
    on left: 23, on right: 4 6
BLOCK (61)
    on left: 24, on right: 23 58 59 60 61 62
EXECUTABLES (62)
    on left: 25 26 27, on right: 24 26 27
VAR_DECL (63)
    on left: 28, on right: 26
EXPRESSION (64)
    on left: 29 30 31 32 33 34 35, on right: 18 19 32 33 34 35 56 58
    59 60 61 63 67 69 76
BINARY_OP (65)
    on left: 36 37 38 39, on right: 32
ARITHMETIC_OP (66)
    on left: 40 41 42 43 44, on right: 36
RELATIONAL_OP (67)
    on left: 45 46 47 48, on right: 37
EQ_OP (68)
    on left: 49 50, on right: 38
CONDITIONAL_OP (69)
    on left: 51 52, on right: 39
LITERAL (70)
    on left: 53 54 55, on right: 31
STATEMENT (71)
    on left: 56 57 58 59 60 61 62 63, on right: 27
METHOD_CALL (72)
    on left: 64 65, on right: 30 57
PARAM_LIST (73)
    on left: 66 67 68 69 70, on right: 64 65 69 70
METHOD_NAME (74)
    on left: 71, on right: 64
ASSIGNMENT_OP (75)
    on left: 72 73 74, on right: 18 19 56
LOCATION (76)
    on left: 75 76, on right: 29 56
ARG_LIST (77)
    on left: 77 78 79, on right: 23 79


State 0

    0 $accept: . PROGRAM $end

    KEY_CLASS  shift, and go to state 1

    PROGRAM  go to state 2


State 1

    1 PROGRAM: KEY_CLASS . KEY_PROGRAM LEFT_CBRACE T_ELINES GLOBAL_DECL RIGHT_CBRACE T_ELINES

    KEY_PROGRAM  shift, and go to state 3


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 4


State 3

    1 PROGRAM: KEY_CLASS KEY_PROGRAM . LEFT_CBRACE T_ELINES GLOBAL_DECL RIGHT_CBRACE T_ELINES

    LEFT_CBRACE  shift, and go to state 5


State 4

    0 $accept: PROGRAM $end .

    $default  accept


State 5

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE . T_ELINES GLOBAL_DECL RIGHT_CBRACE T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 9
    O_SEMICOLONS  go to state 10


State 6

    7 T_NEWLINES: T_NEWLINE .

    $default  reduce using rule 7 (T_NEWLINES)


State 7

   14 O_SEMICOLONS: O_SEMICOLON .

    $default  reduce using rule 14 (O_SEMICOLONS)


State 8

    8 T_NEWLINES: T_NEWLINES . T_NEWLINE
   10 T_ELINES: T_NEWLINES .

    T_NEWLINE  shift, and go to state 11

    T_NEWLINE  [reduce using rule 10 (T_ELINES)]
    $default   reduce using rule 10 (T_ELINES)


State 9

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE T_ELINES . GLOBAL_DECL RIGHT_CBRACE T_ELINES
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    KEY_TYPE     shift, and go to state 12
    O_SEMICOLON  shift, and go to state 7

    KEY_TYPE  [reduce using rule 2 (GLOBAL_DECL)]
    $default  reduce using rule 2 (GLOBAL_DECL)

    GLOBAL_DECL   go to state 13
    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15
    FIELD_DECLS   go to state 16
    METHOD_DECLS  go to state 17


State 10

   11 T_ELINES: O_SEMICOLONS .
   15 O_SEMICOLONS: O_SEMICOLONS . O_SEMICOLON

    O_SEMICOLON  shift, and go to state 18

    O_SEMICOLON  [reduce using rule 11 (T_ELINES)]
    $default     reduce using rule 11 (T_ELINES)


State 11

    8 T_NEWLINES: T_NEWLINES T_NEWLINE .

    $default  reduce using rule 8 (T_NEWLINES)


State 12

   16 FIELD_DECLS: KEY_TYPE . IDENTIFIER_LIST O_SEMICOLONS
   23 METHOD_DECLS: KEY_TYPE . IDENTIFIER O_LEF ARG_LIST O_RIT BLOCK

    IDENTIFIER  shift, and go to state 19

    IDENTIFIER_LIST  go to state 20


State 13

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE T_ELINES GLOBAL_DECL . RIGHT_CBRACE T_ELINES
    5 GLOBAL_DECL: GLOBAL_DECL . FIELD_DECLS T_ELINES
    6            | GLOBAL_DECL . METHOD_DECLS T_ELINES

    KEY_TYPE      shift, and go to state 12
    RIGHT_CBRACE  shift, and go to state 21

    FIELD_DECLS   go to state 22
    METHOD_DECLS  go to state 23


State 14

    8 T_NEWLINES: T_NEWLINES . T_NEWLINE
   12 T_ELINES: T_ELINES T_NEWLINES .

    T_NEWLINE  shift, and go to state 11

    T_NEWLINE  [reduce using rule 12 (T_ELINES)]
    $default   reduce using rule 12 (T_ELINES)


State 15

   13 T_ELINES: T_ELINES O_SEMICOLONS .
   15 O_SEMICOLONS: O_SEMICOLONS . O_SEMICOLON

    O_SEMICOLON  shift, and go to state 18

    O_SEMICOLON  [reduce using rule 13 (T_ELINES)]
    $default     reduce using rule 13 (T_ELINES)


State 16

    3 GLOBAL_DECL: FIELD_DECLS . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 24
    O_SEMICOLONS  go to state 10


State 17

    4 GLOBAL_DECL: METHOD_DECLS . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 25
    O_SEMICOLONS  go to state 10


State 18

   15 O_SEMICOLONS: O_SEMICOLONS O_SEMICOLON .

    $default  reduce using rule 15 (O_SEMICOLONS)


State 19

   17 IDENTIFIER_LIST: IDENTIFIER .
   18                | IDENTIFIER . ASSIGNMENT_OP EXPRESSION
   19                | IDENTIFIER . LEFT_SBRACE INT_LITERAL RIGHT_SBRACE ASSIGNMENT_OP EXPRESSION
   20                | IDENTIFIER . LEFT_SBRACE INT_LITERAL RIGHT_SBRACE
   23 METHOD_DECLS: KEY_TYPE IDENTIFIER . O_LEF ARG_LIST O_RIT BLOCK

    EQUAL_OP      shift, and go to state 26
    ADD_EQUAL_OP  shift, and go to state 27
    SUB_EQUAL_OP  shift, and go to state 28
    LEFT_SBRACE   shift, and go to state 29
    O_LEF         shift, and go to state 30

    $default  reduce using rule 17 (IDENTIFIER_LIST)

    ASSIGNMENT_OP  go to state 31


State 20

   16 FIELD_DECLS: KEY_TYPE IDENTIFIER_LIST . O_SEMICOLONS
   21 IDENTIFIER_LIST: IDENTIFIER_LIST . O_COMMA IDENTIFIER
   22                | IDENTIFIER_LIST . O_COMMA IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE

    O_COMMA      shift, and go to state 32
    O_SEMICOLON  shift, and go to state 7

    O_SEMICOLONS  go to state 33


State 21

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE T_ELINES GLOBAL_DECL RIGHT_CBRACE . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 34
    O_SEMICOLONS  go to state 10


State 22

    5 GLOBAL_DECL: GLOBAL_DECL FIELD_DECLS . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 35
    O_SEMICOLONS  go to state 10


State 23

    6 GLOBAL_DECL: GLOBAL_DECL METHOD_DECLS . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 36
    O_SEMICOLONS  go to state 10


State 24

    3 GLOBAL_DECL: FIELD_DECLS T_ELINES .
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    $default  reduce using rule 3 (GLOBAL_DECL)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 25

    4 GLOBAL_DECL: METHOD_DECLS T_ELINES .
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    $default  reduce using rule 4 (GLOBAL_DECL)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 26

   72 ASSIGNMENT_OP: EQUAL_OP .

    $default  reduce using rule 72 (ASSIGNMENT_OP)


State 27

   73 ASSIGNMENT_OP: ADD_EQUAL_OP .

    $default  reduce using rule 73 (ASSIGNMENT_OP)


State 28

   74 ASSIGNMENT_OP: SUB_EQUAL_OP .

    $default  reduce using rule 74 (ASSIGNMENT_OP)


State 29

   19 IDENTIFIER_LIST: IDENTIFIER LEFT_SBRACE . INT_LITERAL RIGHT_SBRACE ASSIGNMENT_OP EXPRESSION
   20                | IDENTIFIER LEFT_SBRACE . INT_LITERAL RIGHT_SBRACE

    INT_LITERAL  shift, and go to state 37


State 30

   23 METHOD_DECLS: KEY_TYPE IDENTIFIER O_LEF . ARG_LIST O_RIT BLOCK

    KEY_TYPE  shift, and go to state 38

    $default  reduce using rule 77 (ARG_LIST)

    ARG_LIST  go to state 39


State 31

   18 IDENTIFIER_LIST: IDENTIFIER ASSIGNMENT_OP . EXPRESSION

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 48
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 32

   21 IDENTIFIER_LIST: IDENTIFIER_LIST O_COMMA . IDENTIFIER
   22                | IDENTIFIER_LIST O_COMMA . IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE

    IDENTIFIER  shift, and go to state 53


State 33

   15 O_SEMICOLONS: O_SEMICOLONS . O_SEMICOLON
   16 FIELD_DECLS: KEY_TYPE IDENTIFIER_LIST O_SEMICOLONS .

    O_SEMICOLON  shift, and go to state 18

    O_SEMICOLON  [reduce using rule 16 (FIELD_DECLS)]
    $default     reduce using rule 16 (FIELD_DECLS)


State 34

    1 PROGRAM: KEY_CLASS KEY_PROGRAM LEFT_CBRACE T_ELINES GLOBAL_DECL RIGHT_CBRACE T_ELINES .
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    $default  reduce using rule 1 (PROGRAM)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 35

    5 GLOBAL_DECL: GLOBAL_DECL FIELD_DECLS T_ELINES .
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    $default  reduce using rule 5 (GLOBAL_DECL)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 36

    6 GLOBAL_DECL: GLOBAL_DECL METHOD_DECLS T_ELINES .
   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    $default  reduce using rule 6 (GLOBAL_DECL)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 37

   19 IDENTIFIER_LIST: IDENTIFIER LEFT_SBRACE INT_LITERAL . RIGHT_SBRACE ASSIGNMENT_OP EXPRESSION
   20                | IDENTIFIER LEFT_SBRACE INT_LITERAL . RIGHT_SBRACE

    RIGHT_SBRACE  shift, and go to state 54


State 38

   78 ARG_LIST: KEY_TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 55


State 39

   23 METHOD_DECLS: KEY_TYPE IDENTIFIER O_LEF ARG_LIST . O_RIT BLOCK
   79 ARG_LIST: ARG_LIST . O_COMMA KEY_TYPE IDENTIFIER

    O_COMMA  shift, and go to state 56
    O_RIT    shift, and go to state 57


State 40

   71 METHOD_NAME: IDENTIFIER .
   75 LOCATION: IDENTIFIER .
   76         | IDENTIFIER . LEFT_SBRACE EXPRESSION RIGHT_SBRACE

    LEFT_SBRACE  shift, and go to state 58

    O_LEF     reduce using rule 71 (METHOD_NAME)
    $default  reduce using rule 75 (LOCATION)


State 41

   65 METHOD_CALL: KEY_CALLOUT . O_LEF STRING O_COMMA PARAM_LIST O_RIT

    O_LEF  shift, and go to state 59


State 42

   53 LITERAL: INT_LITERAL .

    $default  reduce using rule 53 (LITERAL)


State 43

   54 LITERAL: BOOL_LITERAL .

    $default  reduce using rule 54 (LITERAL)


State 44

   55 LITERAL: CHAR_LITERAL .

    $default  reduce using rule 55 (LITERAL)


State 45

   33 EXPRESSION: BINARY_SUBTRACT . EXPRESSION

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 60
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 46

   35 EXPRESSION: O_LEF . EXPRESSION O_RIT

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 61
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 47

   34 EXPRESSION: UNARY_NOT . EXPRESSION

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 62
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 48

   18 IDENTIFIER_LIST: IDENTIFIER ASSIGNMENT_OP EXPRESSION .
   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION

    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    $default  reduce using rule 18 (IDENTIFIER_LIST)

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 49

   31 EXPRESSION: LITERAL .

    $default  reduce using rule 31 (EXPRESSION)


State 50

   30 EXPRESSION: METHOD_CALL .

    $default  reduce using rule 30 (EXPRESSION)


State 51

   64 METHOD_CALL: METHOD_NAME . O_LEF PARAM_LIST O_RIT

    O_LEF  shift, and go to state 81


State 52

   29 EXPRESSION: LOCATION .

    $default  reduce using rule 29 (EXPRESSION)


State 53

   21 IDENTIFIER_LIST: IDENTIFIER_LIST O_COMMA IDENTIFIER .
   22                | IDENTIFIER_LIST O_COMMA IDENTIFIER . LEFT_SBRACE INT_LITERAL RIGHT_SBRACE

    LEFT_SBRACE  shift, and go to state 82

    $default  reduce using rule 21 (IDENTIFIER_LIST)


State 54

   19 IDENTIFIER_LIST: IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE . ASSIGNMENT_OP EXPRESSION
   20                | IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE .

    EQUAL_OP      shift, and go to state 26
    ADD_EQUAL_OP  shift, and go to state 27
    SUB_EQUAL_OP  shift, and go to state 28

    $default  reduce using rule 20 (IDENTIFIER_LIST)

    ASSIGNMENT_OP  go to state 83


State 55

   78 ARG_LIST: KEY_TYPE IDENTIFIER .

    $default  reduce using rule 78 (ARG_LIST)


State 56

   79 ARG_LIST: ARG_LIST O_COMMA . KEY_TYPE IDENTIFIER

    KEY_TYPE  shift, and go to state 84


State 57

   23 METHOD_DECLS: KEY_TYPE IDENTIFIER O_LEF ARG_LIST O_RIT . BLOCK

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 85
    O_SEMICOLONS  go to state 10
    BLOCK         go to state 86


State 58

   76 LOCATION: IDENTIFIER LEFT_SBRACE . EXPRESSION RIGHT_SBRACE

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 87
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 59

   65 METHOD_CALL: KEY_CALLOUT O_LEF . STRING O_COMMA PARAM_LIST O_RIT

    STRING  shift, and go to state 88


State 60

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   33           | BINARY_SUBTRACT EXPRESSION .

    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    BINARY_ADD            [reduce using rule 33 (EXPRESSION)]
    BINARY_SUBTRACT       [reduce using rule 33 (EXPRESSION)]
    BINARY_MULTIPLY       [reduce using rule 33 (EXPRESSION)]
    BINARY_DIVISION       [reduce using rule 33 (EXPRESSION)]
    BINARY_MOD            [reduce using rule 33 (EXPRESSION)]
    R_AND                 [reduce using rule 33 (EXPRESSION)]
    R_OR                  [reduce using rule 33 (EXPRESSION)]
    R_EQUALS              [reduce using rule 33 (EXPRESSION)]
    R_NOT_EQUALS          [reduce using rule 33 (EXPRESSION)]
    R_GREATER_THAN        [reduce using rule 33 (EXPRESSION)]
    R_GREATER_THAN_EQUAL  [reduce using rule 33 (EXPRESSION)]
    R_LESS_THAN           [reduce using rule 33 (EXPRESSION)]
    R_LESS_THAN_EQUAL     [reduce using rule 33 (EXPRESSION)]
    $default              reduce using rule 33 (EXPRESSION)

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 61

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   35           | O_LEF EXPRESSION . O_RIT

    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    O_RIT                 shift, and go to state 89
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 62

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   34           | UNARY_NOT EXPRESSION .

    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    BINARY_ADD            [reduce using rule 34 (EXPRESSION)]
    BINARY_SUBTRACT       [reduce using rule 34 (EXPRESSION)]
    BINARY_MULTIPLY       [reduce using rule 34 (EXPRESSION)]
    BINARY_DIVISION       [reduce using rule 34 (EXPRESSION)]
    BINARY_MOD            [reduce using rule 34 (EXPRESSION)]
    R_AND                 [reduce using rule 34 (EXPRESSION)]
    R_OR                  [reduce using rule 34 (EXPRESSION)]
    R_EQUALS              [reduce using rule 34 (EXPRESSION)]
    R_NOT_EQUALS          [reduce using rule 34 (EXPRESSION)]
    R_GREATER_THAN        [reduce using rule 34 (EXPRESSION)]
    R_GREATER_THAN_EQUAL  [reduce using rule 34 (EXPRESSION)]
    R_LESS_THAN           [reduce using rule 34 (EXPRESSION)]
    R_LESS_THAN_EQUAL     [reduce using rule 34 (EXPRESSION)]
    $default              reduce using rule 34 (EXPRESSION)

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 63

   40 ARITHMETIC_OP: BINARY_ADD .

    $default  reduce using rule 40 (ARITHMETIC_OP)


State 64

   41 ARITHMETIC_OP: BINARY_SUBTRACT .

    $default  reduce using rule 41 (ARITHMETIC_OP)


State 65

   42 ARITHMETIC_OP: BINARY_MULTIPLY .

    $default  reduce using rule 42 (ARITHMETIC_OP)


State 66

   43 ARITHMETIC_OP: BINARY_DIVISION .

    $default  reduce using rule 43 (ARITHMETIC_OP)


State 67

   44 ARITHMETIC_OP: BINARY_MOD .

    $default  reduce using rule 44 (ARITHMETIC_OP)


State 68

   51 CONDITIONAL_OP: R_AND .

    $default  reduce using rule 51 (CONDITIONAL_OP)


State 69

   52 CONDITIONAL_OP: R_OR .

    $default  reduce using rule 52 (CONDITIONAL_OP)


State 70

   49 EQ_OP: R_EQUALS .

    $default  reduce using rule 49 (EQ_OP)


State 71

   50 EQ_OP: R_NOT_EQUALS .

    $default  reduce using rule 50 (EQ_OP)


State 72

   46 RELATIONAL_OP: R_GREATER_THAN .

    $default  reduce using rule 46 (RELATIONAL_OP)


State 73

   48 RELATIONAL_OP: R_GREATER_THAN_EQUAL .

    $default  reduce using rule 48 (RELATIONAL_OP)


State 74

   45 RELATIONAL_OP: R_LESS_THAN .

    $default  reduce using rule 45 (RELATIONAL_OP)


State 75

   47 RELATIONAL_OP: R_LESS_THAN_EQUAL .

    $default  reduce using rule 47 (RELATIONAL_OP)


State 76

   32 EXPRESSION: EXPRESSION BINARY_OP . EXPRESSION

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 90
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 77

   36 BINARY_OP: ARITHMETIC_OP .

    $default  reduce using rule 36 (BINARY_OP)


State 78

   37 BINARY_OP: RELATIONAL_OP .

    $default  reduce using rule 37 (BINARY_OP)


State 79

   38 BINARY_OP: EQ_OP .

    $default  reduce using rule 38 (BINARY_OP)


State 80

   39 BINARY_OP: CONDITIONAL_OP .

    $default  reduce using rule 39 (BINARY_OP)


State 81

   64 METHOD_CALL: METHOD_NAME O_LEF . PARAM_LIST O_RIT

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    STRING           shift, and go to state 91
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    $default  reduce using rule 66 (PARAM_LIST)

    EXPRESSION   go to state 92
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    PARAM_LIST   go to state 93
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 82

   22 IDENTIFIER_LIST: IDENTIFIER_LIST O_COMMA IDENTIFIER LEFT_SBRACE . INT_LITERAL RIGHT_SBRACE

    INT_LITERAL  shift, and go to state 94


State 83

   19 IDENTIFIER_LIST: IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE ASSIGNMENT_OP . EXPRESSION

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 95
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 84

   79 ARG_LIST: ARG_LIST O_COMMA KEY_TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 96


State 85

   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS
   24 BLOCK: T_ELINES . LEFT_CBRACE EXECUTABLES RIGHT_CBRACE T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7
    LEFT_CBRACE  shift, and go to state 97

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 86

   23 METHOD_DECLS: KEY_TYPE IDENTIFIER O_LEF ARG_LIST O_RIT BLOCK .

    $default  reduce using rule 23 (METHOD_DECLS)


State 87

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   76 LOCATION: IDENTIFIER LEFT_SBRACE EXPRESSION . RIGHT_SBRACE

    RIGHT_SBRACE          shift, and go to state 98
    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 88

   65 METHOD_CALL: KEY_CALLOUT O_LEF STRING . O_COMMA PARAM_LIST O_RIT

    O_COMMA  shift, and go to state 99


State 89

   35 EXPRESSION: O_LEF EXPRESSION O_RIT .

    $default  reduce using rule 35 (EXPRESSION)


State 90

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   32           | EXPRESSION BINARY_OP EXPRESSION .

    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    BINARY_ADD            [reduce using rule 32 (EXPRESSION)]
    BINARY_SUBTRACT       [reduce using rule 32 (EXPRESSION)]
    BINARY_MULTIPLY       [reduce using rule 32 (EXPRESSION)]
    BINARY_DIVISION       [reduce using rule 32 (EXPRESSION)]
    BINARY_MOD            [reduce using rule 32 (EXPRESSION)]
    R_AND                 [reduce using rule 32 (EXPRESSION)]
    R_OR                  [reduce using rule 32 (EXPRESSION)]
    R_EQUALS              [reduce using rule 32 (EXPRESSION)]
    R_NOT_EQUALS          [reduce using rule 32 (EXPRESSION)]
    R_GREATER_THAN        [reduce using rule 32 (EXPRESSION)]
    R_GREATER_THAN_EQUAL  [reduce using rule 32 (EXPRESSION)]
    R_LESS_THAN           [reduce using rule 32 (EXPRESSION)]
    R_LESS_THAN_EQUAL     [reduce using rule 32 (EXPRESSION)]
    $default              reduce using rule 32 (EXPRESSION)

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 91

   68 PARAM_LIST: STRING .

    $default  reduce using rule 68 (PARAM_LIST)


State 92

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   67 PARAM_LIST: EXPRESSION .

    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    $default  reduce using rule 67 (PARAM_LIST)

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 93

   64 METHOD_CALL: METHOD_NAME O_LEF PARAM_LIST . O_RIT
   69 PARAM_LIST: PARAM_LIST . O_COMMA EXPRESSION
   70           | PARAM_LIST . O_COMMA STRING

    O_COMMA  shift, and go to state 100
    O_RIT    shift, and go to state 101


State 94

   22 IDENTIFIER_LIST: IDENTIFIER_LIST O_COMMA IDENTIFIER LEFT_SBRACE INT_LITERAL . RIGHT_SBRACE

    RIGHT_SBRACE  shift, and go to state 102


State 95

   19 IDENTIFIER_LIST: IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE ASSIGNMENT_OP EXPRESSION .
   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION

    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    $default  reduce using rule 19 (IDENTIFIER_LIST)

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 96

   79 ARG_LIST: ARG_LIST O_COMMA KEY_TYPE IDENTIFIER .

    $default  reduce using rule 79 (ARG_LIST)


State 97

   24 BLOCK: T_ELINES LEFT_CBRACE . EXECUTABLES RIGHT_CBRACE T_ELINES

    $default  reduce using rule 25 (EXECUTABLES)

    EXECUTABLES  go to state 103


State 98

   76 LOCATION: IDENTIFIER LEFT_SBRACE EXPRESSION RIGHT_SBRACE .

    $default  reduce using rule 76 (LOCATION)


State 99

   65 METHOD_CALL: KEY_CALLOUT O_LEF STRING O_COMMA . PARAM_LIST O_RIT

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    STRING           shift, and go to state 91
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    $default  reduce using rule 66 (PARAM_LIST)

    EXPRESSION   go to state 92
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    PARAM_LIST   go to state 104
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 100

   69 PARAM_LIST: PARAM_LIST O_COMMA . EXPRESSION
   70           | PARAM_LIST O_COMMA . STRING

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    STRING           shift, and go to state 105
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 106
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 101

   64 METHOD_CALL: METHOD_NAME O_LEF PARAM_LIST O_RIT .

    $default  reduce using rule 64 (METHOD_CALL)


State 102

   22 IDENTIFIER_LIST: IDENTIFIER_LIST O_COMMA IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE .

    $default  reduce using rule 22 (IDENTIFIER_LIST)


State 103

   24 BLOCK: T_ELINES LEFT_CBRACE EXECUTABLES . RIGHT_CBRACE T_ELINES
   26 EXECUTABLES: EXECUTABLES . T_ELINES VAR_DECL
   27            | EXECUTABLES . T_ELINES STATEMENT

    T_NEWLINE     shift, and go to state 6
    O_SEMICOLON   shift, and go to state 7
    RIGHT_CBRACE  shift, and go to state 107

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 108
    O_SEMICOLONS  go to state 10


State 104

   65 METHOD_CALL: KEY_CALLOUT O_LEF STRING O_COMMA PARAM_LIST . O_RIT
   69 PARAM_LIST: PARAM_LIST . O_COMMA EXPRESSION
   70           | PARAM_LIST . O_COMMA STRING

    O_COMMA  shift, and go to state 100
    O_RIT    shift, and go to state 109


State 105

   70 PARAM_LIST: PARAM_LIST O_COMMA STRING .

    $default  reduce using rule 70 (PARAM_LIST)


State 106

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   69 PARAM_LIST: PARAM_LIST O_COMMA EXPRESSION .

    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    $default  reduce using rule 69 (PARAM_LIST)

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 107

   24 BLOCK: T_ELINES LEFT_CBRACE EXECUTABLES RIGHT_CBRACE . T_ELINES

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 110
    O_SEMICOLONS  go to state 10


State 108

   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS
   26 EXECUTABLES: EXECUTABLES T_ELINES . VAR_DECL
   27            | EXECUTABLES T_ELINES . STATEMENT

    T_NEWLINE    shift, and go to state 6
    IDENTIFIER   shift, and go to state 40
    KEY_TYPE     shift, and go to state 111
    KEY_FOR      shift, and go to state 112
    O_SEMICOLON  shift, and go to state 7
    KEY_IF       shift, and go to state 113
    KEY_CALLOUT  shift, and go to state 41
    KEY_RETURN   shift, and go to state 114

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 115
    T_ELINES      go to state 85
    O_SEMICOLONS  go to state 116
    BLOCK         go to state 117
    VAR_DECL      go to state 118
    STATEMENT     go to state 119
    METHOD_CALL   go to state 120
    METHOD_NAME   go to state 51
    LOCATION      go to state 121


State 109

   65 METHOD_CALL: KEY_CALLOUT O_LEF STRING O_COMMA PARAM_LIST O_RIT .

    $default  reduce using rule 65 (METHOD_CALL)


State 110

   12 T_ELINES: T_ELINES . T_NEWLINES
   13         | T_ELINES . O_SEMICOLONS
   24 BLOCK: T_ELINES LEFT_CBRACE EXECUTABLES RIGHT_CBRACE T_ELINES .

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 24 (BLOCK)]
    O_SEMICOLON  [reduce using rule 24 (BLOCK)]
    $default     reduce using rule 24 (BLOCK)

    T_NEWLINES    go to state 14
    O_SEMICOLONS  go to state 15


State 111

   28 VAR_DECL: KEY_TYPE . IDENTIFIER_LIST O_SEMICOLONS

    IDENTIFIER  shift, and go to state 122

    IDENTIFIER_LIST  go to state 123


State 112

   61 STATEMENT: KEY_FOR . IDENTIFIER EQUAL_OP EXPRESSION O_COMMA EXPRESSION BLOCK

    IDENTIFIER  shift, and go to state 124


State 113

   58 STATEMENT: KEY_IF . O_LEF EXPRESSION O_RIT BLOCK
   59          | KEY_IF . O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE BLOCK
   60          | KEY_IF . O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE KEY_IF O_LEF EXPRESSION O_RIT BLOCK

    O_LEF  shift, and go to state 125


State 114

   63 STATEMENT: KEY_RETURN . EXPRESSION O_SEMICOLON

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 126
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 115

    8 T_NEWLINES: T_NEWLINES . T_NEWLINE
   10 T_ELINES: T_NEWLINES .
   12         | T_ELINES T_NEWLINES .

    T_NEWLINE  shift, and go to state 11

    T_NEWLINE    [reduce using rule 10 (T_ELINES)]
    T_NEWLINE    [reduce using rule 12 (T_ELINES)]
    O_SEMICOLON  reduce using rule 10 (T_ELINES)
    O_SEMICOLON  [reduce using rule 12 (T_ELINES)]
    LEFT_CBRACE  reduce using rule 10 (T_ELINES)
    LEFT_CBRACE  [reduce using rule 12 (T_ELINES)]
    $default     reduce using rule 12 (T_ELINES)


State 116

   11 T_ELINES: O_SEMICOLONS .
   13         | T_ELINES O_SEMICOLONS .
   15 O_SEMICOLONS: O_SEMICOLONS . O_SEMICOLON

    O_SEMICOLON  shift, and go to state 18

    T_NEWLINE    reduce using rule 11 (T_ELINES)
    T_NEWLINE    [reduce using rule 13 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 11 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 13 (T_ELINES)]
    LEFT_CBRACE  reduce using rule 11 (T_ELINES)
    LEFT_CBRACE  [reduce using rule 13 (T_ELINES)]
    $default     reduce using rule 13 (T_ELINES)


State 117

   62 STATEMENT: BLOCK .

    $default  reduce using rule 62 (STATEMENT)


State 118

   26 EXECUTABLES: EXECUTABLES T_ELINES VAR_DECL .

    $default  reduce using rule 26 (EXECUTABLES)


State 119

   27 EXECUTABLES: EXECUTABLES T_ELINES STATEMENT .

    $default  reduce using rule 27 (EXECUTABLES)


State 120

   57 STATEMENT: METHOD_CALL . O_SEMICOLON

    O_SEMICOLON  shift, and go to state 127


State 121

   56 STATEMENT: LOCATION . ASSIGNMENT_OP EXPRESSION O_SEMICOLON

    EQUAL_OP      shift, and go to state 26
    ADD_EQUAL_OP  shift, and go to state 27
    SUB_EQUAL_OP  shift, and go to state 28

    ASSIGNMENT_OP  go to state 128


State 122

   17 IDENTIFIER_LIST: IDENTIFIER .
   18                | IDENTIFIER . ASSIGNMENT_OP EXPRESSION
   19                | IDENTIFIER . LEFT_SBRACE INT_LITERAL RIGHT_SBRACE ASSIGNMENT_OP EXPRESSION
   20                | IDENTIFIER . LEFT_SBRACE INT_LITERAL RIGHT_SBRACE

    EQUAL_OP      shift, and go to state 26
    ADD_EQUAL_OP  shift, and go to state 27
    SUB_EQUAL_OP  shift, and go to state 28
    LEFT_SBRACE   shift, and go to state 29

    $default  reduce using rule 17 (IDENTIFIER_LIST)

    ASSIGNMENT_OP  go to state 31


State 123

   21 IDENTIFIER_LIST: IDENTIFIER_LIST . O_COMMA IDENTIFIER
   22                | IDENTIFIER_LIST . O_COMMA IDENTIFIER LEFT_SBRACE INT_LITERAL RIGHT_SBRACE
   28 VAR_DECL: KEY_TYPE IDENTIFIER_LIST . O_SEMICOLONS

    O_COMMA      shift, and go to state 32
    O_SEMICOLON  shift, and go to state 7

    O_SEMICOLONS  go to state 129


State 124

   61 STATEMENT: KEY_FOR IDENTIFIER . EQUAL_OP EXPRESSION O_COMMA EXPRESSION BLOCK

    EQUAL_OP  shift, and go to state 130


State 125

   58 STATEMENT: KEY_IF O_LEF . EXPRESSION O_RIT BLOCK
   59          | KEY_IF O_LEF . EXPRESSION O_RIT BLOCK KEY_ELSE BLOCK
   60          | KEY_IF O_LEF . EXPRESSION O_RIT BLOCK KEY_ELSE KEY_IF O_LEF EXPRESSION O_RIT BLOCK

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 131
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 126

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   63 STATEMENT: KEY_RETURN EXPRESSION . O_SEMICOLON

    O_SEMICOLON           shift, and go to state 132
    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 127

   57 STATEMENT: METHOD_CALL O_SEMICOLON .

    $default  reduce using rule 57 (STATEMENT)


State 128

   56 STATEMENT: LOCATION ASSIGNMENT_OP . EXPRESSION O_SEMICOLON

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 133
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 129

   15 O_SEMICOLONS: O_SEMICOLONS . O_SEMICOLON
   28 VAR_DECL: KEY_TYPE IDENTIFIER_LIST O_SEMICOLONS .

    O_SEMICOLON  shift, and go to state 18

    O_SEMICOLON  [reduce using rule 28 (VAR_DECL)]
    $default     reduce using rule 28 (VAR_DECL)


State 130

   61 STATEMENT: KEY_FOR IDENTIFIER EQUAL_OP . EXPRESSION O_COMMA EXPRESSION BLOCK

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 134
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 131

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   58 STATEMENT: KEY_IF O_LEF EXPRESSION . O_RIT BLOCK
   59          | KEY_IF O_LEF EXPRESSION . O_RIT BLOCK KEY_ELSE BLOCK
   60          | KEY_IF O_LEF EXPRESSION . O_RIT BLOCK KEY_ELSE KEY_IF O_LEF EXPRESSION O_RIT BLOCK

    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    O_RIT                 shift, and go to state 135
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 132

   63 STATEMENT: KEY_RETURN EXPRESSION O_SEMICOLON .

    $default  reduce using rule 63 (STATEMENT)


State 133

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   56 STATEMENT: LOCATION ASSIGNMENT_OP EXPRESSION . O_SEMICOLON

    O_SEMICOLON           shift, and go to state 136
    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 134

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   61 STATEMENT: KEY_FOR IDENTIFIER EQUAL_OP EXPRESSION . O_COMMA EXPRESSION BLOCK

    O_COMMA               shift, and go to state 137
    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 135

   58 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT . BLOCK
   59          | KEY_IF O_LEF EXPRESSION O_RIT . BLOCK KEY_ELSE BLOCK
   60          | KEY_IF O_LEF EXPRESSION O_RIT . BLOCK KEY_ELSE KEY_IF O_LEF EXPRESSION O_RIT BLOCK

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 85
    O_SEMICOLONS  go to state 10
    BLOCK         go to state 138


State 136

   56 STATEMENT: LOCATION ASSIGNMENT_OP EXPRESSION O_SEMICOLON .

    $default  reduce using rule 56 (STATEMENT)


State 137

   61 STATEMENT: KEY_FOR IDENTIFIER EQUAL_OP EXPRESSION O_COMMA . EXPRESSION BLOCK

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 139
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 138

   58 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK .
   59          | KEY_IF O_LEF EXPRESSION O_RIT BLOCK . KEY_ELSE BLOCK
   60          | KEY_IF O_LEF EXPRESSION O_RIT BLOCK . KEY_ELSE KEY_IF O_LEF EXPRESSION O_RIT BLOCK

    KEY_ELSE  shift, and go to state 140

    $default  reduce using rule 58 (STATEMENT)


State 139

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   61 STATEMENT: KEY_FOR IDENTIFIER EQUAL_OP EXPRESSION O_COMMA EXPRESSION . BLOCK

    T_NEWLINE             shift, and go to state 6
    O_SEMICOLON           shift, and go to state 7
    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES      go to state 8
    T_ELINES        go to state 85
    O_SEMICOLONS    go to state 10
    BLOCK           go to state 141
    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 140

   59 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE . BLOCK
   60          | KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE . KEY_IF O_LEF EXPRESSION O_RIT BLOCK

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7
    KEY_IF       shift, and go to state 142

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 85
    O_SEMICOLONS  go to state 10
    BLOCK         go to state 143


State 141

   61 STATEMENT: KEY_FOR IDENTIFIER EQUAL_OP EXPRESSION O_COMMA EXPRESSION BLOCK .

    $default  reduce using rule 61 (STATEMENT)


State 142

   60 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE KEY_IF . O_LEF EXPRESSION O_RIT BLOCK

    O_LEF  shift, and go to state 144


State 143

   59 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE BLOCK .

    $default  reduce using rule 59 (STATEMENT)


State 144

   60 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE KEY_IF O_LEF . EXPRESSION O_RIT BLOCK

    IDENTIFIER       shift, and go to state 40
    KEY_CALLOUT      shift, and go to state 41
    INT_LITERAL      shift, and go to state 42
    BOOL_LITERAL     shift, and go to state 43
    CHAR_LITERAL     shift, and go to state 44
    BINARY_SUBTRACT  shift, and go to state 45
    O_LEF            shift, and go to state 46
    UNARY_NOT        shift, and go to state 47

    EXPRESSION   go to state 145
    LITERAL      go to state 49
    METHOD_CALL  go to state 50
    METHOD_NAME  go to state 51
    LOCATION     go to state 52


State 145

   32 EXPRESSION: EXPRESSION . BINARY_OP EXPRESSION
   60 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE KEY_IF O_LEF EXPRESSION . O_RIT BLOCK

    BINARY_ADD            shift, and go to state 63
    BINARY_SUBTRACT       shift, and go to state 64
    BINARY_MULTIPLY       shift, and go to state 65
    BINARY_DIVISION       shift, and go to state 66
    BINARY_MOD            shift, and go to state 67
    O_RIT                 shift, and go to state 146
    R_AND                 shift, and go to state 68
    R_OR                  shift, and go to state 69
    R_EQUALS              shift, and go to state 70
    R_NOT_EQUALS          shift, and go to state 71
    R_GREATER_THAN        shift, and go to state 72
    R_GREATER_THAN_EQUAL  shift, and go to state 73
    R_LESS_THAN           shift, and go to state 74
    R_LESS_THAN_EQUAL     shift, and go to state 75

    BINARY_OP       go to state 76
    ARITHMETIC_OP   go to state 77
    RELATIONAL_OP   go to state 78
    EQ_OP           go to state 79
    CONDITIONAL_OP  go to state 80


State 146

   60 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE KEY_IF O_LEF EXPRESSION O_RIT . BLOCK

    T_NEWLINE    shift, and go to state 6
    O_SEMICOLON  shift, and go to state 7

    T_NEWLINE    [reduce using rule 9 (T_ELINES)]
    O_SEMICOLON  [reduce using rule 9 (T_ELINES)]
    $default     reduce using rule 9 (T_ELINES)

    T_NEWLINES    go to state 8
    T_ELINES      go to state 85
    O_SEMICOLONS  go to state 10
    BLOCK         go to state 147


State 147

   60 STATEMENT: KEY_IF O_LEF EXPRESSION O_RIT BLOCK KEY_ELSE KEY_IF O_LEF EXPRESSION O_RIT BLOCK .

    $default  reduce using rule 60 (STATEMENT)
